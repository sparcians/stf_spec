#!/usr/bin/python3

import os
from pathlib import Path
from yaml import load
try:
    from yaml import CLoader as Loader
except ImportError:
    from yaml import Loader

def check_required_field(yaml_file, yaml_data, field):
    def check_required_enum_field(enum_field):
        if enum_field not in yaml_data['enum']:
            raise RuntimeError(f"Required 'enum' subfield '{enum_field}' missing from {yaml_file}")

    if yaml_data is None:
        raise RuntimeError(f'Record YAML {yaml_file} is empty')

    if field not in yaml_data:
        raise RuntimeError(f"Required field '{field}' missing from {yaml_file}")

    if field == 'enum':
        check_required_enum_field('name')
        check_required_enum_field('val')

yaml_data = {}

generated_dir = Path('generated')

stf_record_include = '../../include/stf-record.adoc'

for yaml_file in Path('records').glob('*.yml'):
    with open(yaml_file, 'r') as input_file:
        data = load(input_file, Loader=Loader)
        check_required_field(yaml_file, data, 'name')
        check_required_field(yaml_file, data, 'enum')
        check_required_field(yaml_file, data, 'desc')
        yaml_data[yaml_file] = data

with open(generated_dir / 'stf-records.adoc', 'w') as record_list_file:
    for yaml_file, data in sorted(yaml_data.items(), key = lambda x: x[1]['enum']['val']):
        adoc_filename = Path(yaml_file).with_suffix('.adoc')
        output_filename = generated_dir / adoc_filename
        with open(output_filename, 'w') as output_file:
            output_file.write(
                '////\n'
                'DO NOT EDIT. This file was autogenerated by gen-records.py.\n'
                f'To make changes to this file, edit {yaml_file} and then run make.\n'
                '////\n'
                f':record-name: {data["name"]}\n'
                f':record-enum: {data["enum"]["name"]} ({data["enum"]["val"]})\n'
            )
            if 'mandatory' in data:
                output_file.write(f':record-mandatory: {data["mandatory"]}\n')
            output_file.write(f'include::{stf_record_include}[tag=record-fields]\n')
            if 'fields' in data:
                for field in data['fields']:
                    start_idx = field['start']
                    bit_range = str(start_idx)
                    if 'end' in field:
                        end_idx = field['end']
                        if isinstance(end_idx, int) and end_idx < start_idx:
                            raise RuntimeError(f"Field end index {end_idx} should be >= start index {start_idx} in {yaml_file}")
                        if end_idx != start_idx:
                            bit_range = f'{field["end"]}:' + bit_range
                    output_file.write(f'* b[{bit_range}] {field["desc"]}\n')
            else:
                output_file.write('b[-1] Record has no data, just the descriptor.\n')
            output_file.write(
                f'include::{stf_record_include}[tag=record-desc]\n'
                f'{data["desc"]}\n'
                f'include::{stf_record_include}[tag=record-end]\n'
            )

        record_list_file.write(f'include::{adoc_filename}[]\n\n')
